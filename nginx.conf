# MAKE SURE TO PLACE THIS IN THE AZURE FILE SHARE FOR IT TO BE USED

# Run as a less privileged user for security reasons.
user nginx;

worker_processes auto;

events {
  worker_connections 1024;
}

pid        /var/run/nginx.pid;

http {
	
	# This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
	# Possibly in the future this will cause complications.
	add_header X-XSS-Protection "1; mode=block";
	
	# don't send the nginx version number in error pages and Server header   - also for extra security...
	server_tokens off;
	
	# to remove timeout issues with the long-generating report
	# uwsgi_connect_timeout 600s;
	proxy_connect_timeout 600;
	proxy_send_timeout 600s;
	proxy_read_timeout 600s;

	
    server {
        listen 80;
        server_name YOURDOMAIN.eastus.azurecontainer.io;
		# server_name localhost;
		
		access_log  /etc/nginx/logs/access_80.log;
		error_log /etc/nginx/logs/error_80.log;
		
		location ^~ /.well-known {
		  allow all;
		  root  /data/letsencrypt/;
		}
		
		error_page 403 /etc/nginx/error403.html;
		location /etc/nginx/error403.html {
		allow all;
		}
		
		location / {
					# allow/deny IP addresses
			# allow 0.0.0.0;
			# deny all;
			return 301 https://$host$request_uri;
		}
		
    }

    server {
        listen 443 ssl;
		
		access_log  /etc/nginx/logs/access.log;
		error_log /etc/nginx/logs/error.log;
		
		server_name YOURDOMAIN.eastus.azurecontainer.io;

        # Use only the most recent ciphers
        ssl_protocols              TLSv1.2 TLSv1.3;

        # Optimize SSL by caching session parameters for 10 minutes. This cuts down on the number of expensive SSL handshakes.
        # By enabling a cache (of type "shared between all Nginx workers"), we tell the client to re-use the already negotiated state.
        ssl_session_cache    shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
        ssl_session_timeout  24h;


        # Use a higher keepalive timeout to reduce the need for repeated handshakes
        keepalive_timeout 300; # up from 75 secs default

        # remember the certificate for 30 days and automatically connect to HTTPS
		# uncomment only after testing
		# add_header Strict-Transport-Security 'max-age=2600000; includeSubDomains';

	
		ssl_certificate      /etc/nginx/certs/YOURDOMAIN.eastus.azurecontainer.io/fullchain.pem;
        ssl_certificate_key  /etc/nginx/certs/YOURDOMAIN.eastus.azurecontainer.io/privkey.pem;

		# ssl_certificate /etc/letsencrypt/live/YOURDOMAIN.eastus.azurecontainer.io/fullchain.pem;
		# ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN.eastus.azurecontainer.io/privkey.pem;

		location /.well-known {
		  allow all;
		  alias  /data/letsencrypt/.well-known;
		}

        location / {			
			proxy_pass http://localhost:8080; #  replace port if app listens on port other than 8080
            
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    }
}